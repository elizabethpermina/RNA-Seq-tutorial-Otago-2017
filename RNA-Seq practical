### Downloading and transferring files
## wget and curl

# curl -O http://path/filename
ls -l # ls commentaries
# head, less, more, tail, tail -n

### QC and trimming
# cd source and code dir
sudo apt-get -y update && \
sudo apt-get -y install trimmomatic fastqc python-pip \
   samtools zlib1g-dev ncurses-dev python-dev
pip install multiqc   

cd ~/
mkdir data
mkdir data/raw
mkdir data/processed
wget ${datapath}$datafiles data/raw

# check if number of lines in fastq files are equal for R1 and R2, and if it =int*4
# run fastQC

fastqc -h # options. Note options --nano, --nogroup, --contaminants, --adapters
fastqc SRR1976948_1.fastq.gz --outdir data/processed/SRR1976948_1 #! data file names to change


curl -O -L http://dib-training.ucdavis.edu.s3.amazonaws.com/mRNAseq-semi-2015-03-04/TruSeq2-PE.fa
#! data filenames to change
TrimmomaticPE SRR1976948_1.fastq.gz \
                 SRR1976948_2.fastq.gz \
        SRR1976948_1.qc.fq.gz s1_se \
        SRR1976948_2.qc.fq.gz s2_se \
        ILLUMINACLIP:TruSeq2-PE.fa:2:40:15 \
        LEADING:2 TRAILING:2 \
        SLIDINGWINDOW:4:2 \
        MINLEN:25
        
####### salmon mapping the data ###########
# get the reference for the data (Drosophila melanogaster) as a multifasta for coding regions
# get the data from 
curl -O https://zenodo.org/record/61765/files/GSM461177_untreat_paired_subset_1.fastq
curl -O https://zenodo.org/record/61765/files/GSM461177_untreat_paired_subset_2.fastq
curl -O https://zenodo.org/record/61765/files/GSM461178_untreat_paired_subset_1.fastq
curl -O https://zenodo.org/record/61765/files/GSM461178_untreat_paired_subset_2.fastq

curl -O https://zenodo.org/record/61765/files/GSM461180_treat_paired_subset_1.fastq
curl -O https://zenodo.org/record/61765/files/GSM461180_treat_paired_subset_2.fastq
curl -O https://zenodo.org/record/61765/files/GSM461181_treat_paired_subset_1.fastq
curl -O https://zenodo.org/record/61765/files/GSM461181_treat_paired_subset_2.fastq

salmon index --index dros_orfs --type quasi --transcripts orf_coding.fasta.gz

# pseudo-map with salmon

for i in *.fastq.gz
do
    salmon quant -i dros_orfs --libType U -r $i -o $i.quant --seqBias --gcBias
done


#python script for read conversion
curl -L -O https://raw.githubusercontent.com/ngs-docs/angus/change_link_for_edgeR_script/_static/gather-counts.py
python2 gather-counts.py

#analysis R script (edgeR) - to edit !!!
# curl -L -O https://github.com/ngs-docs/angus/raw/change_link_for_edgeR_script/_static/yeast.salmon.R
# Rscript --no-save yeast.salmon.R
